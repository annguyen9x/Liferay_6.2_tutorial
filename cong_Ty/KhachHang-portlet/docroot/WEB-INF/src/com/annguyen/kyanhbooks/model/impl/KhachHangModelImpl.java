/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.annguyen.kyanhbooks.model.impl;

import com.annguyen.kyanhbooks.model.KhachHang;
import com.annguyen.kyanhbooks.model.KhachHangModel;
import com.annguyen.kyanhbooks.model.KhachHangSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the KhachHang service. Represents a row in the &quot;KhachHang&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.annguyen.kyanhbooks.model.KhachHangModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link KhachHangImpl}.
 * </p>
 *
 * @author AnNguyen
 * @see KhachHangImpl
 * @see com.annguyen.kyanhbooks.model.KhachHang
 * @see com.annguyen.kyanhbooks.model.KhachHangModel
 * @generated
 */
@JSON(strict = true)
public class KhachHangModelImpl extends BaseModelImpl<KhachHang>
	implements KhachHangModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a khach hang model instance should use the {@link com.annguyen.kyanhbooks.model.KhachHang} interface instead.
	 */
	public static final String TABLE_NAME = "KhachHang";
	public static final Object[][] TABLE_COLUMNS = {
			{ "MaKH", Types.INTEGER },
			{ "TenKH", Types.VARCHAR },
			{ "MatKhau", Types.VARCHAR },
			{ "Email", Types.VARCHAR },
			{ "DienThoai", Types.VARCHAR },
			{ "GioiTinh", Types.BOOLEAN },
			{ "NgaySinh", Types.TIMESTAMP },
			{ "DiaChi ", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table KhachHang (MaKH INTEGER not null primary key,TenKH VARCHAR(75) null,MatKhau VARCHAR(75) null,Email VARCHAR(75) null,DienThoai VARCHAR(75) null,GioiTinh BOOLEAN,NgaySinh DATE null,DiaChi  VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table KhachHang";
	public static final String ORDER_BY_JPQL = " ORDER BY khachHang.TenKH ASC";
	public static final String ORDER_BY_SQL = " ORDER BY KhachHang.TenKH ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.annguyen.kyanhbooks.model.KhachHang"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.annguyen.kyanhbooks.model.KhachHang"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static KhachHang toModel(KhachHangSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		KhachHang model = new KhachHangImpl();

		model.setMaKH(soapModel.getMaKH());
		model.setTenKH(soapModel.getTenKH());
		model.setMatKhau(soapModel.getMatKhau());
		model.setEmail(soapModel.getEmail());
		model.setDienThoai(soapModel.getDienThoai());
		model.setGioiTinh(soapModel.getGioiTinh());
		model.setNgaySinh(soapModel.getNgaySinh());
		model.setDiaChi(soapModel.getDiaChi());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<KhachHang> toModels(KhachHangSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<KhachHang> models = new ArrayList<KhachHang>(soapModels.length);

		for (KhachHangSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.annguyen.kyanhbooks.model.KhachHang"));

	public KhachHangModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _MaKH;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setMaKH(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _MaKH;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return KhachHang.class;
	}

	@Override
	public String getModelClassName() {
		return KhachHang.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("MaKH", getMaKH());
		attributes.put("TenKH", getTenKH());
		attributes.put("MatKhau", getMatKhau());
		attributes.put("Email", getEmail());
		attributes.put("DienThoai", getDienThoai());
		attributes.put("GioiTinh", getGioiTinh());
		attributes.put("NgaySinh", getNgaySinh());
		attributes.put("DiaChi ", getDiaChi());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer MaKH = (Integer)attributes.get("MaKH");

		if (MaKH != null) {
			setMaKH(MaKH);
		}

		String TenKH = (String)attributes.get("TenKH");

		if (TenKH != null) {
			setTenKH(TenKH);
		}

		String MatKhau = (String)attributes.get("MatKhau");

		if (MatKhau != null) {
			setMatKhau(MatKhau);
		}

		String Email = (String)attributes.get("Email");

		if (Email != null) {
			setEmail(Email);
		}

		String DienThoai = (String)attributes.get("DienThoai");

		if (DienThoai != null) {
			setDienThoai(DienThoai);
		}

		Boolean GioiTinh = (Boolean)attributes.get("GioiTinh");

		if (GioiTinh != null) {
			setGioiTinh(GioiTinh);
		}

		Date NgaySinh = (Date)attributes.get("NgaySinh");

		if (NgaySinh != null) {
			setNgaySinh(NgaySinh);
		}

		String DiaChi = (String)attributes.get("DiaChi ");

		if (DiaChi != null) {
			setDiaChi(DiaChi);
		}
	}

	@JSON
	@Override
	public int getMaKH() {
		return _MaKH;
	}

	@Override
	public void setMaKH(int MaKH) {
		_MaKH = MaKH;
	}

	@JSON
	@Override
	public String getTenKH() {
		if (_TenKH == null) {
			return StringPool.BLANK;
		}
		else {
			return _TenKH;
		}
	}

	@Override
	public void setTenKH(String TenKH) {
		_TenKH = TenKH;
	}

	@JSON
	@Override
	public String getMatKhau() {
		if (_MatKhau == null) {
			return StringPool.BLANK;
		}
		else {
			return _MatKhau;
		}
	}

	@Override
	public void setMatKhau(String MatKhau) {
		_MatKhau = MatKhau;
	}

	@JSON
	@Override
	public String getEmail() {
		if (_Email == null) {
			return StringPool.BLANK;
		}
		else {
			return _Email;
		}
	}

	@Override
	public void setEmail(String Email) {
		_Email = Email;
	}

	@JSON
	@Override
	public String getDienThoai() {
		if (_DienThoai == null) {
			return StringPool.BLANK;
		}
		else {
			return _DienThoai;
		}
	}

	@Override
	public void setDienThoai(String DienThoai) {
		_DienThoai = DienThoai;
	}

	@JSON
	@Override
	public boolean getGioiTinh() {
		return _GioiTinh;
	}

	@Override
	public boolean isGioiTinh() {
		return _GioiTinh;
	}

	@Override
	public void setGioiTinh(boolean GioiTinh) {
		_GioiTinh = GioiTinh;
	}

	@JSON
	@Override
	public Date getNgaySinh() {
		return _NgaySinh;
	}

	@Override
	public void setNgaySinh(Date NgaySinh) {
		_NgaySinh = NgaySinh;
	}

	@JSON
	@Override
	public String getDiaChi() {
		if (_DiaChi == null) {
			return StringPool.BLANK;
		}
		else {
			return _DiaChi;
		}
	}

	@Override
	public void setDiaChi(String DiaChi) {
		_DiaChi = DiaChi;
	}

	@Override
	public KhachHang toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (KhachHang)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		KhachHangImpl khachHangImpl = new KhachHangImpl();

		khachHangImpl.setMaKH(getMaKH());
		khachHangImpl.setTenKH(getTenKH());
		khachHangImpl.setMatKhau(getMatKhau());
		khachHangImpl.setEmail(getEmail());
		khachHangImpl.setDienThoai(getDienThoai());
		khachHangImpl.setGioiTinh(getGioiTinh());
		khachHangImpl.setNgaySinh(getNgaySinh());
		khachHangImpl.setDiaChi(getDiaChi());

		khachHangImpl.resetOriginalValues();

		return khachHangImpl;
	}

	@Override
	public int compareTo(KhachHang khachHang) {
		int value = 0;

		value = getTenKH().compareTo(khachHang.getTenKH());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof KhachHang)) {
			return false;
		}

		KhachHang khachHang = (KhachHang)obj;

		int primaryKey = khachHang.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<KhachHang> toCacheModel() {
		KhachHangCacheModel khachHangCacheModel = new KhachHangCacheModel();

		khachHangCacheModel.MaKH = getMaKH();

		khachHangCacheModel.TenKH = getTenKH();

		String TenKH = khachHangCacheModel.TenKH;

		if ((TenKH != null) && (TenKH.length() == 0)) {
			khachHangCacheModel.TenKH = null;
		}

		khachHangCacheModel.MatKhau = getMatKhau();

		String MatKhau = khachHangCacheModel.MatKhau;

		if ((MatKhau != null) && (MatKhau.length() == 0)) {
			khachHangCacheModel.MatKhau = null;
		}

		khachHangCacheModel.Email = getEmail();

		String Email = khachHangCacheModel.Email;

		if ((Email != null) && (Email.length() == 0)) {
			khachHangCacheModel.Email = null;
		}

		khachHangCacheModel.DienThoai = getDienThoai();

		String DienThoai = khachHangCacheModel.DienThoai;

		if ((DienThoai != null) && (DienThoai.length() == 0)) {
			khachHangCacheModel.DienThoai = null;
		}

		khachHangCacheModel.GioiTinh = getGioiTinh();

		Date NgaySinh = getNgaySinh();

		if (NgaySinh != null) {
			khachHangCacheModel.NgaySinh = NgaySinh.getTime();
		}
		else {
			khachHangCacheModel.NgaySinh = Long.MIN_VALUE;
		}

		khachHangCacheModel.DiaChi = getDiaChi();

		String DiaChi = khachHangCacheModel.DiaChi;

		if ((DiaChi != null) && (DiaChi.length() == 0)) {
			khachHangCacheModel.DiaChi = null;
		}

		return khachHangCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(17);

		sb.append("{MaKH=");
		sb.append(getMaKH());
		sb.append(", TenKH=");
		sb.append(getTenKH());
		sb.append(", MatKhau=");
		sb.append(getMatKhau());
		sb.append(", Email=");
		sb.append(getEmail());
		sb.append(", DienThoai=");
		sb.append(getDienThoai());
		sb.append(", GioiTinh=");
		sb.append(getGioiTinh());
		sb.append(", NgaySinh=");
		sb.append(getNgaySinh());
		sb.append(", DiaChi =");
		sb.append(getDiaChi());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(28);

		sb.append("<model><model-name>");
		sb.append("com.annguyen.kyanhbooks.model.KhachHang");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>MaKH</column-name><column-value><![CDATA[");
		sb.append(getMaKH());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>TenKH</column-name><column-value><![CDATA[");
		sb.append(getTenKH());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>MatKhau</column-name><column-value><![CDATA[");
		sb.append(getMatKhau());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>DienThoai</column-name><column-value><![CDATA[");
		sb.append(getDienThoai());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>GioiTinh</column-name><column-value><![CDATA[");
		sb.append(getGioiTinh());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>NgaySinh</column-name><column-value><![CDATA[");
		sb.append(getNgaySinh());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>DiaChi </column-name><column-value><![CDATA[");
		sb.append(getDiaChi());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = KhachHang.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			KhachHang.class
		};
	private int _MaKH;
	private String _TenKH;
	private String _MatKhau;
	private String _Email;
	private String _DienThoai;
	private boolean _GioiTinh;
	private Date _NgaySinh;
	private String _DiaChi;
	private KhachHang _escapedModel;
}